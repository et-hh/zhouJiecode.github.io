(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{224:function(e,s,t){"use strict";t.r(s);var r=t(0),i=Object(r.a)({},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[e._v("sip.js解决早起媒体无法播放问题")]),e._v(" "),t("h2",{attrs:{id:"问题背景"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#问题背景","aria-hidden":"true"}},[e._v("#")]),e._v(" 问题背景")]),e._v(" "),t("p",[e._v("在项目中我们实现了一个通过浏览器进行外呼的功能，浏览器端我们通过sip.js来与freeswitch进行通信。但是我们发现，在外呼的过程中，我们不能听到类似彩铃或者嘟嘟声来提示正在拨打，业界称之为early media，即早期媒体。sip.js并没有很好的支持这一功能，本文目的在于记录一下如何通过修改源码实现该功能。")]),e._v(" "),t("h2",{attrs:{id:"解决过程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#解决过程","aria-hidden":"true"}},[e._v("#")]),e._v(" 解决过程")]),e._v(" "),t("p",[e._v("这个问题在sip.js的issue中也有人问及，不过大家给出的形形色色的解决方案由于版本不一致，可能并不适用。因此需要从原理着手，再去解决这个问题就相对容易很多。之前我写过一篇"),t("a",{attrs:{href:"http://bbs.yiwise.com/#/posts/5ca5efd9a814c3225e04fa03",target:"_blank",rel:"noopener noreferrer"}},[e._v("sip.js初探"),t("OutboundLink")],1),e._v("，里面介绍了一些sip和webrtc相关的内容。其实要实现早期媒体，从本质上来说就是在服务端返回183信令的时候，去建立媒体通道即可。不过sip.js遵循了sip协议，在返回2xx时才去建立媒体通道。那么要建立媒体通道，我们仅仅只要在183中获取sdp信息，调用webrtc的setRemoteDescription将其写入客户端即可。因此我们可以参考这个"),t("a",{attrs:{href:"https://github.com/onsip/SIP.js/pull/502/commits/790df01050d181aa610b9e7b3fcc8d753938c0ea",target:"_blank",rel:"noopener noreferrer"}},[e._v("issue"),t("OutboundLink")],1),e._v("的实现，sip.js封装了一个setDescription方法，我们仅需将sdp写入即可建立媒体通道。这个issue中有人提了mr来修复这个问题，不过被作者驳回了。作者给出的理由也相当有意思，他举了一个电话可能会被多人抢接的情况。这种情况下由于webrtc中peerconnection的限制，一旦和其中一人建立媒体通道，即接收到sdp并写入本地，此时另一个抢接成功的终端将听不到声音。虽然这种场景不多见，但是作为一个开源库的作者，也不得不赞叹他的这种大局观与责任心。因此我们只能自行去修改源码完成这个功能，继续看issue，作者又给出了一种方案，即sip.js遵循RFC规范，提供了一种100rel的方式来解决这个问题，我们来解释一下这个100rel。")]),e._v(" "),t("p",[e._v("根据sip协议，只有状态为2xx的响应才被认为是reliable的，当客户端收到第一个reliable的响应，才允许建立媒体通道。但是为了解决某些特殊场景需要在1xx就建立媒体通道的情况，RFC由此提出了100rel，顾名思义，将1xx响应也变成reliable的，然后客户端返回PRACK表示收到响应，此时也能建立媒体通道。但是上面提到的问题我们依旧无法解决，即sdp一旦被接收并写入将无法更改。因此作者提议此方法不能通过sdp作为会话描述，不过目前大多数应用还是通过sdp来描述会话的，考虑到改动成本与太多未知因素，还是建议通过源码的方式解决这个问题。")])])}),[],!1,null,null,null);s.default=i.exports}}]);