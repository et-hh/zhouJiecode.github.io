(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{226:function(e,n,t){"use strict";t.r(n);var r=t(0),s=Object(r.a)({},(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"package-json"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#package-json","aria-hidden":"true"}},[e._v("#")]),e._v(" package.json:")]),e._v(" "),t("pre",[t("code",[e._v('{\n  "name": "vuessr",\n  "version": "1.0.0",\n  "description": "",\n  "main": "index.js",\n  "scripts": {\n    "test": "echo \\"Error: no test specified\\" && exit 1",\n    "dev": "node server",\n    "start": "cross-env NODE_ENV=production node server",\n    "build": "rimraf dist && npm run build:client && npm run build:server",\n    "build:client": "webpack --config build/webpack.client.js --progress --hide-modules",\n    "build:server": "webpack --config build/webpack.server.js --progress --hide-modules"\n  },\n  "author": "",\n  "license": "ISC",\n  "dependencies": {\n    "vue": "^2.5.16",\n    "vue-router": "^3.0.1",\n    "vuex": "^3.0.1",\n    "vuex-router-sync": "^5.0.0"\n  },\n  "devDependencies": {\n    "autoprefixer": "^8.6.3",\n    "babel-core": "^6.26.3",\n    "babel-loader": "^7.1.4",\n    "babel-plugin-syntax-dynamic-import": "^6.18.0",\n    "cross-env": "^5.2.0",\n    "express": "^4.16.3",\n    "extract-text-webpack-plugin": "^3.0.2",\n    "fs": "0.0.1-security",\n    "html-webpack-plugin": "^3.2.0",\n    "memory-fs": "^0.4.1",\n    "rimraf": "^2.6.2",\n    "style-loader": "^0.21.0",\n    "url-loader": "^1.0.1",\n    "vue-loader": "^15.2.4",\n    "vue-server-renderer": "^2.5.16",\n    "vue-style-loader": "^4.1.0",\n    "vue-template-compiler": "^2.5.16",\n    "webpack": "^3.6.0",\n    "webpack-dev-middleware": "^1.10.1",\n    "webpack-hot-middleware": "^2.22.2",\n    "webpack-merge": "^4.1.3",\n    "webpack-node-externals": "^1.7.2"\n  }\n}\n')])]),e._v(" "),t("h1",{attrs:{id:"entry-server-js"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#entry-server-js","aria-hidden":"true"}},[e._v("#")]),e._v(" entry-server.js:")]),e._v(" "),t("pre",[t("code",[e._v("import createApp from './app'\n\nexport default context => {\n  // 因为有可能会是异步路由钩子函数或组件，所以我们将返回一个 Promise，\n    // 以便服务器能够等待所有的内容在渲染前，\n    // 就已经准备就绪。\n  return new Promise((resolve, reject) => {\n    const { app, router, store } = createApp()\n\n    console.log('to router:' + context.url)\n\n    // 设置服务器端 router 的位置\n    router.push(context.url)\n\n    // 等到 router 将可能的异步组件和钩子函数解析完\n    router.onReady(() => {\n  \t    console.log('router onReady')\n\n  \t    const matchedComponents = router.getMatchedComponents()\n\n  \t    console.log('matchedComponents:' + matchedComponents)\n    // 匹配不到的路由，执行 reject 函数，并返回 404\n    if (!matchedComponents.length) {\n        return reject({ code: 404 })\n    }\n\n        Promise.all(matchedComponents.map(Component => {\n            return Component.preFetch && Component.preFetch({store, router})\n        })).then(() => {\n            context.state = store.state\n\n            // Promise 应该 resolve 应用程序实例，以便它可以渲染\n            resolve(app)\n        }).catch(reject)\n    }, reject)\n  })\n}\n")])]),e._v(" "),t("h1",{attrs:{id:"entry-client-js"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#entry-client-js","aria-hidden":"true"}},[e._v("#")]),e._v(" entry-client.js")]),e._v(" "),t("pre",[t("code",[e._v("import createApp from './app'\n\nconst { app, router, store } = createApp()\n\n// 必须先replaceState之后才能mount app，否则会导致客户端和服务端状态不同步\nif(window.__INITIAL_STATE__) {\n\tstore.replaceState(window.__INITIAL_STATE__)\n}\n\nrouter.onReady(() => {\n  // 开始挂载到dom上\n  app.$mount('#app')\n})\n")])]),e._v(" "),t("h1",{attrs:{id:"setup-dev-server-js"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#setup-dev-server-js","aria-hidden":"true"}},[e._v("#")]),e._v(" setup-dev-server.js:")]),e._v(" "),t("pre",[t("code",[e._v("const path = require('path')\nconst webpack = require('webpack')\nconst MFS = require('memory-fs')\n// const fs = require('fs')\nconst clientConfig = require('./webpack.client')\nconst serverConfig = require('./webpack.server')\n    \nmodule.exports = function setupDevServer (app, cb) {\n  let bundle\n  let template\n  let clientManifest\n\n  // modify client config to work with hot middleware\n  clientConfig.entry.app = ['webpack-hot-middleware/client', clientConfig.entry.app]\n  clientConfig.output.filename = '[name].js'\n  clientConfig.plugins.push(\n    new webpack.HotModuleReplacementPlugin(),\n    new webpack.NoEmitOnErrorsPlugin()\n  )\n\n  // dev middleware\n  const clientCompiler = webpack(clientConfig)\n  const devMiddleware = require('webpack-dev-middleware')(clientCompiler, {\n    publicPath: clientConfig.output.publicPath,\n    stats: {\n      colors: true,\n      chunks: false\n    }\n  })\n  app.use(devMiddleware)\n  clientCompiler.plugin('done', () => {\n    const fs = devMiddleware.fileSystem\n    const filePath = path.join(clientConfig.output.path, 'index.html')\n    const manifestPath = path.join(clientConfig.output.path, 'vue-ssr-client-manifest.json')\n\n    if (fs.existsSync(filePath) && fs.existsSync(manifestPath)) {\n      template = fs.readFileSync(filePath, 'utf-8')\n      clientManifest = JSON.parse(fs.readFileSync(manifestPath, 'utf-8'))\n      if (bundle) {\n        cb(bundle, template, clientManifest)\n      }\n    }\n  })\n\n  // hot middleware\n  app.use(require('webpack-hot-middleware')(clientCompiler))\n\n  // watch and update server renderer\n  const serverCompiler = webpack(serverConfig)\n  const mfs = new MFS()\n  serverCompiler.outputFileSystem = mfs\n  serverCompiler.watch({}, (err, stats) => {\n    process.stdout.write(stats.toString({\n      colors:true,\n      modules: false,\n      chidlren: false,\n      chunks: false,\n      chunkModules: false\n    }))\n    if (err) throw err\n    stats = stats.toJson()\n    stats.errors.forEach(err => console.error(err))\n    stats.warnings.forEach(err => console.warn(err))\n\n    // read bundle generated by vue-ssr-webpack-plugin\n    const bundlePath = path.join(serverConfig.output.path, 'vue-ssr-server-bundle.json')\n    bundle = JSON.parse(mfs.readFileSync(bundlePath, 'utf-8'))\n    if (template && clientManifest) {\n      cb(bundle, template, clientManifest)\n    }\n  })\n}\n")])])])}),[],!1,null,null,null);n.default=s.exports}}]);